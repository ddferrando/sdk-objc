

#import "DRCTSGetMessageManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetMessageManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetMessagesMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetMessagesDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetMessageManagedObject*)createNewDRCTSGetMessageManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetMessageManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetMessageManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetMessageManagedObject*)DRCTSGetMessageManagedObjectFromDRCTSGetMessage:(DRCTSGetMessage*)object context:(NSManagedObjectContext*)context {
    DRCTSGetMessageManagedObject* newDRCTSGetMessage = [self createNewDRCTSGetMessageManagedObjectInContext:context];
    [self updateDRCTSGetMessageManagedObject:newDRCTSGetMessage withDRCTSGetMessage:object];
    return newDRCTSGetMessage;
}

-(void)updateDRCTSGetMessageManagedObject:(DRCTSGetMessageManagedObject*)managedObject withDRCTSGetMessage:(DRCTSGetMessage*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetMessagesMetaManagedObjectFromDRCTSGetMessagesMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetMessagesMetaManagedObject:managedObject.meta withDRCTSGetMessagesMeta:object.meta];
    }

    if(!managedObject.data) {
        managedObject.data = [self.dataBuilder DRCTSGetMessagesDataManagedObjectFromDRCTSGetMessagesData:object.data context:managedObject.managedObjectContext];
    } else {
        [self.dataBuilder updateDRCTSGetMessagesDataManagedObject:managedObject.data withDRCTSGetMessagesData:object.data];
    }

}

-(DRCTSGetMessage*)DRCTSGetMessageFromDRCTSGetMessageManagedObject:(DRCTSGetMessageManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetMessage* newDRCTSGetMessage = [[DRCTSGetMessage alloc] init];
    [self updateDRCTSGetMessage:newDRCTSGetMessage withDRCTSGetMessageManagedObject:obj];
    return newDRCTSGetMessage;
}

-(void)updateDRCTSGetMessage:(DRCTSGetMessage*)newDRCTSGetMessage withDRCTSGetMessageManagedObject:(DRCTSGetMessageManagedObject*)obj {
    newDRCTSGetMessage.meta = [self.metaBuilder DRCTSGetMessagesMetaFromDRCTSGetMessagesMetaManagedObject:obj.meta];
    newDRCTSGetMessage.data = [self.dataBuilder DRCTSGetMessagesDataFromDRCTSGetMessagesDataManagedObject:obj.data];
}

@end
