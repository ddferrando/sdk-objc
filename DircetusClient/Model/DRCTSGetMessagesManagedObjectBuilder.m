

#import "DRCTSGetMessagesManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetMessagesManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetMessagesMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetMessagesDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetMessagesManagedObject*)createNewDRCTSGetMessagesManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetMessagesManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetMessagesManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetMessagesManagedObject*)DRCTSGetMessagesManagedObjectFromDRCTSGetMessages:(DRCTSGetMessages*)object context:(NSManagedObjectContext*)context {
    DRCTSGetMessagesManagedObject* newDRCTSGetMessages = [self createNewDRCTSGetMessagesManagedObjectInContext:context];
    [self updateDRCTSGetMessagesManagedObject:newDRCTSGetMessages withDRCTSGetMessages:object];
    return newDRCTSGetMessages;
}

-(void)updateDRCTSGetMessagesManagedObject:(DRCTSGetMessagesManagedObject*)managedObject withDRCTSGetMessages:(DRCTSGetMessages*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetMessagesMetaManagedObjectFromDRCTSGetMessagesMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetMessagesMetaManagedObject:managedObject.meta withDRCTSGetMessagesMeta:object.meta];
    }
    if(managedObject.data) {
        for (id object in managedObject.data) {
            [context deleteObject:object];
        }
    }
    if(object.data) {
        NSMutableOrderedSet * convertedObjs = [NSMutableOrderedSet orderedSet];
        for (id innerObject in object.data) {
            id convertedObj = [self.dataBuilder DRCTSGetMessagesDataManagedObjectFromDRCTSGetMessagesData:innerObject context:managedObject.managedObjectContext];
            [convertedObjs addObject:convertedObj];
        }
        managedObject.data = convertedObjs;
    }

}

-(DRCTSGetMessages*)DRCTSGetMessagesFromDRCTSGetMessagesManagedObject:(DRCTSGetMessagesManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetMessages* newDRCTSGetMessages = [[DRCTSGetMessages alloc] init];
    [self updateDRCTSGetMessages:newDRCTSGetMessages withDRCTSGetMessagesManagedObject:obj];
    return newDRCTSGetMessages;
}

-(void)updateDRCTSGetMessages:(DRCTSGetMessages*)newDRCTSGetMessages withDRCTSGetMessagesManagedObject:(DRCTSGetMessagesManagedObject*)obj {
    newDRCTSGetMessages.meta = [self.metaBuilder DRCTSGetMessagesMetaFromDRCTSGetMessagesMetaManagedObject:obj.meta];
    if(obj.data != nil) {
        NSMutableArray* convertedObjs = [NSMutableArray array];
        for (id innerObject in obj.data) {
            id convertedObj = [self.dataBuilder DRCTSGetMessagesDataFromDRCTSGetMessagesDataManagedObject:innerObject];
            [convertedObjs addObject:convertedObj];
        }
        newDRCTSGetMessages.data = (NSArray<DRCTSGetMessagesData>*)convertedObjs;
    }
    
}

@end
