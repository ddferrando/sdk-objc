

#import "DRCTSGetTableColumnManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetTableColumnManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetTablesMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetTableColumnDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetTableColumnManagedObject*)createNewDRCTSGetTableColumnManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetTableColumnManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetTableColumnManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetTableColumnManagedObject*)DRCTSGetTableColumnManagedObjectFromDRCTSGetTableColumn:(DRCTSGetTableColumn*)object context:(NSManagedObjectContext*)context {
    DRCTSGetTableColumnManagedObject* newDRCTSGetTableColumn = [self createNewDRCTSGetTableColumnManagedObjectInContext:context];
    [self updateDRCTSGetTableColumnManagedObject:newDRCTSGetTableColumn withDRCTSGetTableColumn:object];
    return newDRCTSGetTableColumn;
}

-(void)updateDRCTSGetTableColumnManagedObject:(DRCTSGetTableColumnManagedObject*)managedObject withDRCTSGetTableColumn:(DRCTSGetTableColumn*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetTablesMetaManagedObjectFromDRCTSGetTablesMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetTablesMetaManagedObject:managedObject.meta withDRCTSGetTablesMeta:object.meta];
    }

    if(!managedObject.data) {
        managedObject.data = [self.dataBuilder DRCTSGetTableColumnDataManagedObjectFromDRCTSGetTableColumnData:object.data context:managedObject.managedObjectContext];
    } else {
        [self.dataBuilder updateDRCTSGetTableColumnDataManagedObject:managedObject.data withDRCTSGetTableColumnData:object.data];
    }

}

-(DRCTSGetTableColumn*)DRCTSGetTableColumnFromDRCTSGetTableColumnManagedObject:(DRCTSGetTableColumnManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetTableColumn* newDRCTSGetTableColumn = [[DRCTSGetTableColumn alloc] init];
    [self updateDRCTSGetTableColumn:newDRCTSGetTableColumn withDRCTSGetTableColumnManagedObject:obj];
    return newDRCTSGetTableColumn;
}

-(void)updateDRCTSGetTableColumn:(DRCTSGetTableColumn*)newDRCTSGetTableColumn withDRCTSGetTableColumnManagedObject:(DRCTSGetTableColumnManagedObject*)obj {
    newDRCTSGetTableColumn.meta = [self.metaBuilder DRCTSGetTablesMetaFromDRCTSGetTablesMetaManagedObject:obj.meta];
    newDRCTSGetTableColumn.data = [self.dataBuilder DRCTSGetTableColumnDataFromDRCTSGetTableColumnDataManagedObject:obj.data];
}

@end
