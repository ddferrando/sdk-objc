

#import "DRCTSGetGroupsDataManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetGroupsDataManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetGroupsDataMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetGroupsDataDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetGroupsDataManagedObject*)createNewDRCTSGetGroupsDataManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetGroupsDataManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetGroupsDataManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetGroupsDataManagedObject*)DRCTSGetGroupsDataManagedObjectFromDRCTSGetGroupsData:(DRCTSGetGroupsData*)object context:(NSManagedObjectContext*)context {
    DRCTSGetGroupsDataManagedObject* newDRCTSGetGroupsData = [self createNewDRCTSGetGroupsDataManagedObjectInContext:context];
    [self updateDRCTSGetGroupsDataManagedObject:newDRCTSGetGroupsData withDRCTSGetGroupsData:object];
    return newDRCTSGetGroupsData;
}

-(void)updateDRCTSGetGroupsDataManagedObject:(DRCTSGetGroupsDataManagedObject*)managedObject withDRCTSGetGroupsData:(DRCTSGetGroupsData*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetGroupsDataMetaManagedObjectFromDRCTSGetGroupsDataMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetGroupsDataMetaManagedObject:managedObject.meta withDRCTSGetGroupsDataMeta:object.meta];
    }
    if(managedObject.data) {
        for (id object in managedObject.data) {
            [context deleteObject:object];
        }
    }
    if(object.data) {
        NSMutableOrderedSet * convertedObjs = [NSMutableOrderedSet orderedSet];
        for (id innerObject in object.data) {
            id convertedObj = [self.dataBuilder DRCTSGetGroupsDataDataManagedObjectFromDRCTSGetGroupsDataData:innerObject context:managedObject.managedObjectContext];
            [convertedObjs addObject:convertedObj];
        }
        managedObject.data = convertedObjs;
    }

}

-(DRCTSGetGroupsData*)DRCTSGetGroupsDataFromDRCTSGetGroupsDataManagedObject:(DRCTSGetGroupsDataManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetGroupsData* newDRCTSGetGroupsData = [[DRCTSGetGroupsData alloc] init];
    [self updateDRCTSGetGroupsData:newDRCTSGetGroupsData withDRCTSGetGroupsDataManagedObject:obj];
    return newDRCTSGetGroupsData;
}

-(void)updateDRCTSGetGroupsData:(DRCTSGetGroupsData*)newDRCTSGetGroupsData withDRCTSGetGroupsDataManagedObject:(DRCTSGetGroupsDataManagedObject*)obj {
    newDRCTSGetGroupsData.meta = [self.metaBuilder DRCTSGetGroupsDataMetaFromDRCTSGetGroupsDataMetaManagedObject:obj.meta];
    if(obj.data != nil) {
        NSMutableArray* convertedObjs = [NSMutableArray array];
        for (id innerObject in obj.data) {
            id convertedObj = [self.dataBuilder DRCTSGetGroupsDataDataFromDRCTSGetGroupsDataDataManagedObject:innerObject];
            [convertedObjs addObject:convertedObj];
        }
        newDRCTSGetGroupsData.data = (NSArray<DRCTSGetGroupsDataData>*)convertedObjs;
    }
    
}

@end
