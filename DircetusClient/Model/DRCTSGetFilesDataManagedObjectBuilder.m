

#import "DRCTSGetFilesDataManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetFilesDataManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
    }
    return self;
}

-(DRCTSGetFilesDataManagedObject*)createNewDRCTSGetFilesDataManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetFilesDataManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetFilesDataManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetFilesDataManagedObject*)DRCTSGetFilesDataManagedObjectFromDRCTSGetFilesData:(DRCTSGetFilesData*)object context:(NSManagedObjectContext*)context {
    DRCTSGetFilesDataManagedObject* newDRCTSGetFilesData = [self createNewDRCTSGetFilesDataManagedObjectInContext:context];
    [self updateDRCTSGetFilesDataManagedObject:newDRCTSGetFilesData withDRCTSGetFilesData:object];
    return newDRCTSGetFilesData;
}

-(void)updateDRCTSGetFilesDataManagedObject:(DRCTSGetFilesDataManagedObject*)managedObject withDRCTSGetFilesData:(DRCTSGetFilesData*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;
    managedObject._id = [object._id copy];
    managedObject.active = [object.active copy];
    managedObject.name = [object.name copy];
    managedObject.url = [object.url copy];
    managedObject.title = [object.title copy];
    managedObject.location = [object.location copy];
    managedObject.caption = [object.caption copy];
    managedObject.type = [object.type copy];
    managedObject.charset = [object.charset copy];
    managedObject.tags = [object.tags copy];
    managedObject.width = [object.width copy];
    managedObject.height = [object.height copy];
    managedObject.size = [object.size copy];
    managedObject.embedId = [object.embedId copy];
    managedObject.user = [object.user copy];
    managedObject.dateUploaded = [object.dateUploaded copy];
    managedObject.storageAdapter = [object.storageAdapter copy];

}

-(DRCTSGetFilesData*)DRCTSGetFilesDataFromDRCTSGetFilesDataManagedObject:(DRCTSGetFilesDataManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetFilesData* newDRCTSGetFilesData = [[DRCTSGetFilesData alloc] init];
    [self updateDRCTSGetFilesData:newDRCTSGetFilesData withDRCTSGetFilesDataManagedObject:obj];
    return newDRCTSGetFilesData;
}

-(void)updateDRCTSGetFilesData:(DRCTSGetFilesData*)newDRCTSGetFilesData withDRCTSGetFilesDataManagedObject:(DRCTSGetFilesDataManagedObject*)obj {
    newDRCTSGetFilesData._id = [obj._id copy];
    newDRCTSGetFilesData.active = [obj.active copy];
    newDRCTSGetFilesData.name = [obj.name copy];
    newDRCTSGetFilesData.url = [obj.url copy];
    newDRCTSGetFilesData.title = [obj.title copy];
    newDRCTSGetFilesData.location = [obj.location copy];
    newDRCTSGetFilesData.caption = [obj.caption copy];
    newDRCTSGetFilesData.type = [obj.type copy];
    newDRCTSGetFilesData.charset = [obj.charset copy];
    newDRCTSGetFilesData.tags = [obj.tags copy];
    newDRCTSGetFilesData.width = [obj.width copy];
    newDRCTSGetFilesData.height = [obj.height copy];
    newDRCTSGetFilesData.size = [obj.size copy];
    newDRCTSGetFilesData.embedId = [obj.embedId copy];
    newDRCTSGetFilesData.user = [obj.user copy];
    newDRCTSGetFilesData.dateUploaded = [obj.dateUploaded copy];
    newDRCTSGetFilesData.storageAdapter = [obj.storageAdapter copy];
}

@end
