

#import "DRCTSGetActivityManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetActivityManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetActivityMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetActivityDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetActivityManagedObject*)createNewDRCTSGetActivityManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetActivityManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetActivityManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetActivityManagedObject*)DRCTSGetActivityManagedObjectFromDRCTSGetActivity:(DRCTSGetActivity*)object context:(NSManagedObjectContext*)context {
    DRCTSGetActivityManagedObject* newDRCTSGetActivity = [self createNewDRCTSGetActivityManagedObjectInContext:context];
    [self updateDRCTSGetActivityManagedObject:newDRCTSGetActivity withDRCTSGetActivity:object];
    return newDRCTSGetActivity;
}

-(void)updateDRCTSGetActivityManagedObject:(DRCTSGetActivityManagedObject*)managedObject withDRCTSGetActivity:(DRCTSGetActivity*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetActivityMetaManagedObjectFromDRCTSGetActivityMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetActivityMetaManagedObject:managedObject.meta withDRCTSGetActivityMeta:object.meta];
    }
    if(managedObject.data) {
        for (id object in managedObject.data) {
            [context deleteObject:object];
        }
    }
    if(object.data) {
        NSMutableOrderedSet * convertedObjs = [NSMutableOrderedSet orderedSet];
        for (id innerObject in object.data) {
            id convertedObj = [self.dataBuilder DRCTSGetActivityDataManagedObjectFromDRCTSGetActivityData:innerObject context:managedObject.managedObjectContext];
            [convertedObjs addObject:convertedObj];
        }
        managedObject.data = convertedObjs;
    }

}

-(DRCTSGetActivity*)DRCTSGetActivityFromDRCTSGetActivityManagedObject:(DRCTSGetActivityManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetActivity* newDRCTSGetActivity = [[DRCTSGetActivity alloc] init];
    [self updateDRCTSGetActivity:newDRCTSGetActivity withDRCTSGetActivityManagedObject:obj];
    return newDRCTSGetActivity;
}

-(void)updateDRCTSGetActivity:(DRCTSGetActivity*)newDRCTSGetActivity withDRCTSGetActivityManagedObject:(DRCTSGetActivityManagedObject*)obj {
    newDRCTSGetActivity.meta = [self.metaBuilder DRCTSGetActivityMetaFromDRCTSGetActivityMetaManagedObject:obj.meta];
    if(obj.data != nil) {
        NSMutableArray* convertedObjs = [NSMutableArray array];
        for (id innerObject in obj.data) {
            id convertedObj = [self.dataBuilder DRCTSGetActivityDataFromDRCTSGetActivityDataManagedObject:innerObject];
            [convertedObjs addObject:convertedObj];
        }
        newDRCTSGetActivity.data = (NSArray<DRCTSGetActivityData>*)convertedObjs;
    }
    
}

@end
