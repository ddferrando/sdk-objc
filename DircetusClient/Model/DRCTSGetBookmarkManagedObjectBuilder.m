

#import "DRCTSGetBookmarkManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetBookmarkManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetTablesMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetBookmarksDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetBookmarkManagedObject*)createNewDRCTSGetBookmarkManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetBookmarkManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetBookmarkManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetBookmarkManagedObject*)DRCTSGetBookmarkManagedObjectFromDRCTSGetBookmark:(DRCTSGetBookmark*)object context:(NSManagedObjectContext*)context {
    DRCTSGetBookmarkManagedObject* newDRCTSGetBookmark = [self createNewDRCTSGetBookmarkManagedObjectInContext:context];
    [self updateDRCTSGetBookmarkManagedObject:newDRCTSGetBookmark withDRCTSGetBookmark:object];
    return newDRCTSGetBookmark;
}

-(void)updateDRCTSGetBookmarkManagedObject:(DRCTSGetBookmarkManagedObject*)managedObject withDRCTSGetBookmark:(DRCTSGetBookmark*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetTablesMetaManagedObjectFromDRCTSGetTablesMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetTablesMetaManagedObject:managedObject.meta withDRCTSGetTablesMeta:object.meta];
    }

    if(!managedObject.data) {
        managedObject.data = [self.dataBuilder DRCTSGetBookmarksDataManagedObjectFromDRCTSGetBookmarksData:object.data context:managedObject.managedObjectContext];
    } else {
        [self.dataBuilder updateDRCTSGetBookmarksDataManagedObject:managedObject.data withDRCTSGetBookmarksData:object.data];
    }

}

-(DRCTSGetBookmark*)DRCTSGetBookmarkFromDRCTSGetBookmarkManagedObject:(DRCTSGetBookmarkManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetBookmark* newDRCTSGetBookmark = [[DRCTSGetBookmark alloc] init];
    [self updateDRCTSGetBookmark:newDRCTSGetBookmark withDRCTSGetBookmarkManagedObject:obj];
    return newDRCTSGetBookmark;
}

-(void)updateDRCTSGetBookmark:(DRCTSGetBookmark*)newDRCTSGetBookmark withDRCTSGetBookmarkManagedObject:(DRCTSGetBookmarkManagedObject*)obj {
    newDRCTSGetBookmark.meta = [self.metaBuilder DRCTSGetTablesMetaFromDRCTSGetTablesMetaManagedObject:obj.meta];
    newDRCTSGetBookmark.data = [self.dataBuilder DRCTSGetBookmarksDataFromDRCTSGetBookmarksDataManagedObject:obj.data];
}

@end
