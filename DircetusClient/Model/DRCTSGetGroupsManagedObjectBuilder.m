

#import "DRCTSGetGroupsManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetGroupsManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetTablesMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetGroupsDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetGroupsManagedObject*)createNewDRCTSGetGroupsManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetGroupsManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetGroupsManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetGroupsManagedObject*)DRCTSGetGroupsManagedObjectFromDRCTSGetGroups:(DRCTSGetGroups*)object context:(NSManagedObjectContext*)context {
    DRCTSGetGroupsManagedObject* newDRCTSGetGroups = [self createNewDRCTSGetGroupsManagedObjectInContext:context];
    [self updateDRCTSGetGroupsManagedObject:newDRCTSGetGroups withDRCTSGetGroups:object];
    return newDRCTSGetGroups;
}

-(void)updateDRCTSGetGroupsManagedObject:(DRCTSGetGroupsManagedObject*)managedObject withDRCTSGetGroups:(DRCTSGetGroups*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetTablesMetaManagedObjectFromDRCTSGetTablesMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetTablesMetaManagedObject:managedObject.meta withDRCTSGetTablesMeta:object.meta];
    }

    if(!managedObject.data) {
        managedObject.data = [self.dataBuilder DRCTSGetGroupsDataManagedObjectFromDRCTSGetGroupsData:object.data context:managedObject.managedObjectContext];
    } else {
        [self.dataBuilder updateDRCTSGetGroupsDataManagedObject:managedObject.data withDRCTSGetGroupsData:object.data];
    }

}

-(DRCTSGetGroups*)DRCTSGetGroupsFromDRCTSGetGroupsManagedObject:(DRCTSGetGroupsManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetGroups* newDRCTSGetGroups = [[DRCTSGetGroups alloc] init];
    [self updateDRCTSGetGroups:newDRCTSGetGroups withDRCTSGetGroupsManagedObject:obj];
    return newDRCTSGetGroups;
}

-(void)updateDRCTSGetGroups:(DRCTSGetGroups*)newDRCTSGetGroups withDRCTSGetGroupsManagedObject:(DRCTSGetGroupsManagedObject*)obj {
    newDRCTSGetGroups.meta = [self.metaBuilder DRCTSGetTablesMetaFromDRCTSGetTablesMetaManagedObject:obj.meta];
    newDRCTSGetGroups.data = [self.dataBuilder DRCTSGetGroupsDataFromDRCTSGetGroupsDataManagedObject:obj.data];
}

@end
