

#import "DRCTSGetMessagesDataManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetMessagesDataManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _responsesBuilder = [[DRCTSGetMessagesResponsesManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetMessagesDataManagedObject*)createNewDRCTSGetMessagesDataManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetMessagesDataManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetMessagesDataManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetMessagesDataManagedObject*)DRCTSGetMessagesDataManagedObjectFromDRCTSGetMessagesData:(DRCTSGetMessagesData*)object context:(NSManagedObjectContext*)context {
    DRCTSGetMessagesDataManagedObject* newDRCTSGetMessagesData = [self createNewDRCTSGetMessagesDataManagedObjectInContext:context];
    [self updateDRCTSGetMessagesDataManagedObject:newDRCTSGetMessagesData withDRCTSGetMessagesData:object];
    return newDRCTSGetMessagesData;
}

-(void)updateDRCTSGetMessagesDataManagedObject:(DRCTSGetMessagesDataManagedObject*)managedObject withDRCTSGetMessagesData:(DRCTSGetMessagesData*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;
    managedObject._id = [object._id copy];
    managedObject.from = [object.from copy];
    managedObject.subject = [object.subject copy];
    managedObject.message = [object.message copy];
    managedObject.attachment = [object.attachment copy];
    managedObject.datetime = [object.datetime copy];
    managedObject.responseTo = [object.responseTo copy];
    managedObject.read = [object.read copy];

    if(!managedObject.responses) {
        managedObject.responses = [self.responsesBuilder DRCTSGetMessagesResponsesManagedObjectFromDRCTSGetMessagesResponses:object.responses context:managedObject.managedObjectContext];
    } else {
        [self.responsesBuilder updateDRCTSGetMessagesResponsesManagedObject:managedObject.responses withDRCTSGetMessagesResponses:object.responses];
    }
    managedObject.recipients = [object.recipients copy];
    managedObject.dateUpdated = [object.dateUpdated copy];

}

-(DRCTSGetMessagesData*)DRCTSGetMessagesDataFromDRCTSGetMessagesDataManagedObject:(DRCTSGetMessagesDataManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetMessagesData* newDRCTSGetMessagesData = [[DRCTSGetMessagesData alloc] init];
    [self updateDRCTSGetMessagesData:newDRCTSGetMessagesData withDRCTSGetMessagesDataManagedObject:obj];
    return newDRCTSGetMessagesData;
}

-(void)updateDRCTSGetMessagesData:(DRCTSGetMessagesData*)newDRCTSGetMessagesData withDRCTSGetMessagesDataManagedObject:(DRCTSGetMessagesDataManagedObject*)obj {
    newDRCTSGetMessagesData._id = [obj._id copy];
    newDRCTSGetMessagesData.from = [obj.from copy];
    newDRCTSGetMessagesData.subject = [obj.subject copy];
    newDRCTSGetMessagesData.message = [obj.message copy];
    newDRCTSGetMessagesData.attachment = [obj.attachment copy];
    newDRCTSGetMessagesData.datetime = [obj.datetime copy];
    newDRCTSGetMessagesData.responseTo = [obj.responseTo copy];
    newDRCTSGetMessagesData.read = [obj.read copy];
    newDRCTSGetMessagesData.responses = [self.responsesBuilder DRCTSGetMessagesResponsesFromDRCTSGetMessagesResponsesManagedObject:obj.responses];
    newDRCTSGetMessagesData.recipients = [obj.recipients copy];
    newDRCTSGetMessagesData.dateUpdated = [obj.dateUpdated copy];
}

@end
