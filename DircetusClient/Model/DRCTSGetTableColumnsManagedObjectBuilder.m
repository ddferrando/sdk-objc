

#import "DRCTSGetTableColumnsManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetTableColumnsManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetTablesMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetTableColumnsDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetTableColumnsManagedObject*)createNewDRCTSGetTableColumnsManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetTableColumnsManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetTableColumnsManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetTableColumnsManagedObject*)DRCTSGetTableColumnsManagedObjectFromDRCTSGetTableColumns:(DRCTSGetTableColumns*)object context:(NSManagedObjectContext*)context {
    DRCTSGetTableColumnsManagedObject* newDRCTSGetTableColumns = [self createNewDRCTSGetTableColumnsManagedObjectInContext:context];
    [self updateDRCTSGetTableColumnsManagedObject:newDRCTSGetTableColumns withDRCTSGetTableColumns:object];
    return newDRCTSGetTableColumns;
}

-(void)updateDRCTSGetTableColumnsManagedObject:(DRCTSGetTableColumnsManagedObject*)managedObject withDRCTSGetTableColumns:(DRCTSGetTableColumns*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetTablesMetaManagedObjectFromDRCTSGetTablesMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetTablesMetaManagedObject:managedObject.meta withDRCTSGetTablesMeta:object.meta];
    }
    if(managedObject.data) {
        for (id object in managedObject.data) {
            [context deleteObject:object];
        }
    }
    if(object.data) {
        NSMutableOrderedSet * convertedObjs = [NSMutableOrderedSet orderedSet];
        for (id innerObject in object.data) {
            id convertedObj = [self.dataBuilder DRCTSGetTableColumnsDataManagedObjectFromDRCTSGetTableColumnsData:innerObject context:managedObject.managedObjectContext];
            [convertedObjs addObject:convertedObj];
        }
        managedObject.data = convertedObjs;
    }

}

-(DRCTSGetTableColumns*)DRCTSGetTableColumnsFromDRCTSGetTableColumnsManagedObject:(DRCTSGetTableColumnsManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetTableColumns* newDRCTSGetTableColumns = [[DRCTSGetTableColumns alloc] init];
    [self updateDRCTSGetTableColumns:newDRCTSGetTableColumns withDRCTSGetTableColumnsManagedObject:obj];
    return newDRCTSGetTableColumns;
}

-(void)updateDRCTSGetTableColumns:(DRCTSGetTableColumns*)newDRCTSGetTableColumns withDRCTSGetTableColumnsManagedObject:(DRCTSGetTableColumnsManagedObject*)obj {
    newDRCTSGetTableColumns.meta = [self.metaBuilder DRCTSGetTablesMetaFromDRCTSGetTablesMetaManagedObject:obj.meta];
    if(obj.data != nil) {
        NSMutableArray* convertedObjs = [NSMutableArray array];
        for (id innerObject in obj.data) {
            id convertedObj = [self.dataBuilder DRCTSGetTableColumnsDataFromDRCTSGetTableColumnsDataManagedObject:innerObject];
            [convertedObjs addObject:convertedObj];
        }
        newDRCTSGetTableColumns.data = (NSArray<DRCTSGetTableColumnsData>*)convertedObjs;
    }
    
}

@end
