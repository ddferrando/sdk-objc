

#import "DRCTSGetSettingsDataFilesManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetSettingsDataFilesManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
    }
    return self;
}

-(DRCTSGetSettingsDataFilesManagedObject*)createNewDRCTSGetSettingsDataFilesManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetSettingsDataFilesManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetSettingsDataFilesManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetSettingsDataFilesManagedObject*)DRCTSGetSettingsDataFilesManagedObjectFromDRCTSGetSettingsDataFiles:(DRCTSGetSettingsDataFiles*)object context:(NSManagedObjectContext*)context {
    DRCTSGetSettingsDataFilesManagedObject* newDRCTSGetSettingsDataFiles = [self createNewDRCTSGetSettingsDataFilesManagedObjectInContext:context];
    [self updateDRCTSGetSettingsDataFilesManagedObject:newDRCTSGetSettingsDataFiles withDRCTSGetSettingsDataFiles:object];
    return newDRCTSGetSettingsDataFiles;
}

-(void)updateDRCTSGetSettingsDataFilesManagedObject:(DRCTSGetSettingsDataFilesManagedObject*)managedObject withDRCTSGetSettingsDataFiles:(DRCTSGetSettingsDataFiles*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;
    managedObject.allowedThumbnails = [object.allowedThumbnails copy];
    managedObject.thumbnailQuality = [object.thumbnailQuality copy];
    managedObject.thumbnailSize = [object.thumbnailSize copy];
    managedObject.fileNaming = [object.fileNaming copy];
    managedObject.thumbnailCropEnabled = [object.thumbnailCropEnabled copy];
    managedObject.youtubeApiKey = [object.youtubeApiKey copy];

}

-(DRCTSGetSettingsDataFiles*)DRCTSGetSettingsDataFilesFromDRCTSGetSettingsDataFilesManagedObject:(DRCTSGetSettingsDataFilesManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetSettingsDataFiles* newDRCTSGetSettingsDataFiles = [[DRCTSGetSettingsDataFiles alloc] init];
    [self updateDRCTSGetSettingsDataFiles:newDRCTSGetSettingsDataFiles withDRCTSGetSettingsDataFilesManagedObject:obj];
    return newDRCTSGetSettingsDataFiles;
}

-(void)updateDRCTSGetSettingsDataFiles:(DRCTSGetSettingsDataFiles*)newDRCTSGetSettingsDataFiles withDRCTSGetSettingsDataFilesManagedObject:(DRCTSGetSettingsDataFilesManagedObject*)obj {
    newDRCTSGetSettingsDataFiles.allowedThumbnails = [obj.allowedThumbnails copy];
    newDRCTSGetSettingsDataFiles.thumbnailQuality = [obj.thumbnailQuality copy];
    newDRCTSGetSettingsDataFiles.thumbnailSize = [obj.thumbnailSize copy];
    newDRCTSGetSettingsDataFiles.fileNaming = [obj.fileNaming copy];
    newDRCTSGetSettingsDataFiles.thumbnailCropEnabled = [obj.thumbnailCropEnabled copy];
    newDRCTSGetSettingsDataFiles.youtubeApiKey = [obj.youtubeApiKey copy];
}

@end
