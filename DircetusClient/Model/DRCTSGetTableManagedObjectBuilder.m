

#import "DRCTSGetTableManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetTableManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetTablesMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetTableDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetTableManagedObject*)createNewDRCTSGetTableManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetTableManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetTableManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetTableManagedObject*)DRCTSGetTableManagedObjectFromDRCTSGetTable:(DRCTSGetTable*)object context:(NSManagedObjectContext*)context {
    DRCTSGetTableManagedObject* newDRCTSGetTable = [self createNewDRCTSGetTableManagedObjectInContext:context];
    [self updateDRCTSGetTableManagedObject:newDRCTSGetTable withDRCTSGetTable:object];
    return newDRCTSGetTable;
}

-(void)updateDRCTSGetTableManagedObject:(DRCTSGetTableManagedObject*)managedObject withDRCTSGetTable:(DRCTSGetTable*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetTablesMetaManagedObjectFromDRCTSGetTablesMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetTablesMetaManagedObject:managedObject.meta withDRCTSGetTablesMeta:object.meta];
    }

    if(!managedObject.data) {
        managedObject.data = [self.dataBuilder DRCTSGetTableDataManagedObjectFromDRCTSGetTableData:object.data context:managedObject.managedObjectContext];
    } else {
        [self.dataBuilder updateDRCTSGetTableDataManagedObject:managedObject.data withDRCTSGetTableData:object.data];
    }

}

-(DRCTSGetTable*)DRCTSGetTableFromDRCTSGetTableManagedObject:(DRCTSGetTableManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetTable* newDRCTSGetTable = [[DRCTSGetTable alloc] init];
    [self updateDRCTSGetTable:newDRCTSGetTable withDRCTSGetTableManagedObject:obj];
    return newDRCTSGetTable;
}

-(void)updateDRCTSGetTable:(DRCTSGetTable*)newDRCTSGetTable withDRCTSGetTableManagedObject:(DRCTSGetTableManagedObject*)obj {
    newDRCTSGetTable.meta = [self.metaBuilder DRCTSGetTablesMetaFromDRCTSGetTablesMetaManagedObject:obj.meta];
    newDRCTSGetTable.data = [self.dataBuilder DRCTSGetTableDataFromDRCTSGetTableDataManagedObject:obj.data];
}

@end
