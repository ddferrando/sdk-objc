

#import "DRCTSGetSettingsManagedObjectBuilder.h"

/**
* NOTE: This class is auto generated by the swagger code generator program.
* https://github.com/swagger-api/swagger-codegen
* Do not edit the class manually.
*/

@implementation DRCTSGetSettingsManagedObjectBuilder

-(instancetype)init {
    self = [super init];
    if (self != nil) {
       _metaBuilder = [[DRCTSGetTablesMetaManagedObjectBuilder alloc] init];
       _dataBuilder = [[DRCTSGetSettingsDataManagedObjectBuilder alloc] init];
    }
    return self;
}

-(DRCTSGetSettingsManagedObject*)createNewDRCTSGetSettingsManagedObjectInContext:(NSManagedObjectContext*)context {
    DRCTSGetSettingsManagedObject *managedObject = [NSEntityDescription insertNewObjectForEntityForName:NSStringFromClass([DRCTSGetSettingsManagedObject class]) inManagedObjectContext:context];
    return managedObject;
}

-(DRCTSGetSettingsManagedObject*)DRCTSGetSettingsManagedObjectFromDRCTSGetSettings:(DRCTSGetSettings*)object context:(NSManagedObjectContext*)context {
    DRCTSGetSettingsManagedObject* newDRCTSGetSettings = [self createNewDRCTSGetSettingsManagedObjectInContext:context];
    [self updateDRCTSGetSettingsManagedObject:newDRCTSGetSettings withDRCTSGetSettings:object];
    return newDRCTSGetSettings;
}

-(void)updateDRCTSGetSettingsManagedObject:(DRCTSGetSettingsManagedObject*)managedObject withDRCTSGetSettings:(DRCTSGetSettings*)object {
    if(!managedObject || !object) {
        return;
    }
    NSManagedObjectContext* context = managedObject.managedObjectContext;

    if(!managedObject.meta) {
        managedObject.meta = [self.metaBuilder DRCTSGetTablesMetaManagedObjectFromDRCTSGetTablesMeta:object.meta context:managedObject.managedObjectContext];
    } else {
        [self.metaBuilder updateDRCTSGetTablesMetaManagedObject:managedObject.meta withDRCTSGetTablesMeta:object.meta];
    }

    if(!managedObject.data) {
        managedObject.data = [self.dataBuilder DRCTSGetSettingsDataManagedObjectFromDRCTSGetSettingsData:object.data context:managedObject.managedObjectContext];
    } else {
        [self.dataBuilder updateDRCTSGetSettingsDataManagedObject:managedObject.data withDRCTSGetSettingsData:object.data];
    }

}

-(DRCTSGetSettings*)DRCTSGetSettingsFromDRCTSGetSettingsManagedObject:(DRCTSGetSettingsManagedObject*)obj {
    if(!obj) {
        return nil;
    }
    DRCTSGetSettings* newDRCTSGetSettings = [[DRCTSGetSettings alloc] init];
    [self updateDRCTSGetSettings:newDRCTSGetSettings withDRCTSGetSettingsManagedObject:obj];
    return newDRCTSGetSettings;
}

-(void)updateDRCTSGetSettings:(DRCTSGetSettings*)newDRCTSGetSettings withDRCTSGetSettingsManagedObject:(DRCTSGetSettingsManagedObject*)obj {
    newDRCTSGetSettings.meta = [self.metaBuilder DRCTSGetTablesMetaFromDRCTSGetTablesMetaManagedObject:obj.meta];
    newDRCTSGetSettings.data = [self.dataBuilder DRCTSGetSettingsDataFromDRCTSGetSettingsDataManagedObject:obj.data];
}

@end
